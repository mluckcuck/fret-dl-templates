[
    {
        "reqid": "RLChooseAction",
        "parent_reqid": "",
        "project": "[DL] Temp Control",
        "rationale": "whenever (c S ≥ t S ) RLAgent shall immediately satisfy c := ∗;",
        "comments": "",
        "fulltext": "whenever ( cs  >=  ts ) RLAgent shall immediately satisfy choose( c )",
        "semantics": {
            "type": "nasa",
            "scope": {
                "type": "null"
            },
            "condition": "noTrigger",
            "timing": "immediately",
            "response": "satisfaction",
            "variables": [
                "cs",
                "ts",
                "choose",
                "c"
            ],
            "qualifier_word": "whenever",
            "pre_condition": "(( cs >= ts ))",
            "regular_condition": "(( cs >= ts ))",
            "conditionTextRange": [
                0,
                22
            ],
            "component_name": "RLAgent",
            "componentTextRange": [
                24,
                30
            ],
            "timingTextRange": [
                38,
                48
            ],
            "post_condition": "(choose ( c ))",
            "responseTextRange": [
                50,
                68
            ],
            "diagramVariables": "CC = <b><i>(( cs >= ts ))</i></b>, Response = <b><i>(choose ( c ))</i></b>.",
            "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: every point in the interval where <b><i>(( cs >= ts ))</i></b> is true.\nREQUIRES: for every trigger, if trigger holds then RES also holds at the same time point.",
            "diagram": "_media/user-interface/examples/svgDiagrams/null_noTrigger_immediately_satisfaction.svg",
            "scope_mode_pt": "BAD_PT",
            "scope_mode_ft": "BAD_FT",
            "regular_condition_unexp_pt": "(cs >= ts)",
            "regular_condition_unexp_ft": "(cs >= ts)",
            "regular_condition_SMV_pt": "(cs >= ts)",
            "regular_condition_SMV_ft": "(cs >= ts)",
            "post_condition_unexp_pt": "choose(c)",
            "post_condition_unexp_ft": "choose(c)",
            "post_condition_SMV_pt": "choose(c)",
            "post_condition_SMV_ft": "choose(c)",
            "ft_fetched": "(LAST V ($regular_condition_unexp_ft$ -> $post_condition_unexp_ft$))",
            "ft": "(LAST V ((cs >= ts) -> choose(c)))",
            "pt_fetched": "(H ($regular_condition_unexp_pt$ -> $post_condition_unexp_pt$))",
            "pt": "(H ((cs >= ts) -> choose(c)))",
            "ptExpanded_fetched": "(H ($regular_condition_SMV_pt$ -> $post_condition_SMV_pt$))",
            "ptExpanded": "(H ((cs >= ts) -> choose(c)))",
            "CoCoSpecCode": "H(((cs >= ts) => choose(c)))",
            "ftExpanded_fetched": "(LAST V ($regular_condition_SMV_ft$ -> $post_condition_SMV_ft$))",
            "ftExpandedUnoptimized": "(LAST V ((cs >= ts) -> choose(c)))",
            "ftExpanded": "(LAST V ((cs >= ts) -> choose(c)))",
            "ftInfAUExpanded_fetched": "(G ($regular_condition_SMV_ft$ -> $post_condition_SMV_ft$))",
            "ftInfAUExpanded": "(G ((cs >= ts) -> choose(c)))",
            "component": "RLAgent"
        },
        "_id": "e3630b20-a678-11ef-8874-cde1a02b03fb"
    },
    {
        "reqid": "SystemThreshold",
        "parent_reqid": "",
        "project": "[DL] Temp Control",
        "rationale": "if T ≤ T MAX System shall always satisfy T ≤ T MAX",
        "comments": "",
        "fulltext": "if  Temp < TMax  System shall always satisfy  Temp <= TMax ",
        "semantics": {
            "type": "nasa",
            "scope": {
                "type": "null"
            },
            "condition": "regular",
            "timing": "always",
            "response": "satisfaction",
            "variables": [
                "Temp",
                "TMax"
            ],
            "qualifier_word": "if",
            "pre_condition": "(Temp < TMax)",
            "regular_condition": "(Temp < TMax)",
            "conditionTextRange": [
                0,
                14
            ],
            "component_name": "System",
            "componentTextRange": [
                17,
                22
            ],
            "timingTextRange": [
                30,
                35
            ],
            "post_condition": "(Temp <= TMax)",
            "responseTextRange": [
                37,
                57
            ],
            "diagramVariables": "TC = <b><i>(Temp < TMax)</i></b>, Response = <b><i>(Temp <= TMax)</i></b>.",
            "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if <b><i>(Temp < TMax)</i></b> is true and any point in the interval where <b><i>(Temp < TMax)</i></b> becomes true (from false).\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
            "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_always_satisfaction.svg",
            "scope_mode_pt": "BAD_PT",
            "scope_mode_ft": "BAD_FT",
            "regular_condition_unexp_pt": "(Temp < TMax)",
            "regular_condition_unexp_ft": "(Temp < TMax)",
            "regular_condition_SMV_pt": "(Temp < TMax)",
            "regular_condition_SMV_ft": "(Temp < TMax)",
            "post_condition_unexp_pt": "(Temp <= TMax)",
            "post_condition_unexp_ft": "(Temp <= TMax)",
            "post_condition_SMV_pt": "(Temp <= TMax)",
            "post_condition_SMV_ft": "(Temp <= TMax)",
            "ft_fetched": "((LAST V (((! $regular_condition_unexp_ft$) & ((! LAST) & (X $regular_condition_unexp_ft$))) -> (X (LAST V $post_condition_unexp_ft$)))) & ($regular_condition_unexp_ft$ -> (LAST V $post_condition_unexp_ft$)))",
            "ft": "((LAST V (((! (Temp < TMax)) & ((! LAST) & (X (Temp < TMax)))) -> (X (LAST V (Temp <= TMax))))) & ((Temp < TMax) -> (LAST V (Temp <= TMax))))",
            "pt_fetched": "(H ((H (! $regular_condition_unexp_pt$)) | $post_condition_unexp_pt$))",
            "pt": "(H ((H (! (Temp < TMax))) | (Temp <= TMax)))",
            "ptExpanded_fetched": "(H ((H (! $regular_condition_SMV_pt$)) | $post_condition_SMV_pt$))",
            "ptExpanded": "(H ((H (! (Temp < TMax))) | (Temp <= TMax)))",
            "CoCoSpecCode": "H((H(not ((Temp < TMax))) or (Temp <= TMax)))",
            "ftExpanded_fetched": "((LAST V (((! $regular_condition_SMV_ft$) & ((! LAST) & (X $regular_condition_SMV_ft$))) -> (X (LAST V $post_condition_SMV_ft$)))) & ($regular_condition_SMV_ft$ -> (LAST V $post_condition_SMV_ft$)))",
            "ftExpandedUnoptimized": "((LAST V (((! (Temp < TMax)) & ((! LAST) & (X (Temp < TMax)))) -> (X (LAST V (Temp <= TMax))))) & ((Temp < TMax) -> (LAST V (Temp <= TMax))))",
            "ftExpanded": "((LAST V (((! (Temp < TMax)) & ((! LAST) & (X (Temp < TMax)))) -> (X (LAST V (Temp <= TMax))))) & ((Temp < TMax) -> (LAST V (Temp <= TMax))))",
            "ftInfAUExpanded_fetched": "((G (((! $regular_condition_SMV_ft$) & (X $regular_condition_SMV_ft$)) -> (X (G $post_condition_SMV_ft$)))) & ($regular_condition_SMV_ft$ -> (G $post_condition_SMV_ft$)))",
            "ftInfAUExpanded": "((G (((! (Temp < TMax)) & (X (Temp < TMax))) -> (X (G (Temp <= TMax))))) & ((Temp < TMax) -> (G (Temp <= TMax))))",
            "component": "System"
        },
        "_id": "e3630b21-a678-11ef-8874-cde1a02b03fb"
    },
    {
        "reqid": "RLNoChange",
        "parent_reqid": "",
        "project": "[DL] Temp Control",
        "rationale": "whenever (c S < t S ) RLAgent shall immediately satisfy c := c_old ;",
        "comments": "c := c_old doesn't fit into the template.",
        "fulltext": "whenever ( cs  <  ts ) RLAgent shall immediately satisfy maintain( c )",
        "semantics": {
            "type": "nasa",
            "scope": {
                "type": "null"
            },
            "condition": "noTrigger",
            "timing": "immediately",
            "response": "satisfaction",
            "variables": [
                "cs",
                "ts",
                "maintain",
                "c"
            ],
            "qualifier_word": "whenever",
            "pre_condition": "(( cs < ts ))",
            "regular_condition": "(( cs < ts ))",
            "conditionTextRange": [
                0,
                21
            ],
            "component_name": "RLAgent",
            "componentTextRange": [
                23,
                29
            ],
            "timingTextRange": [
                37,
                47
            ],
            "post_condition": "(maintain ( c ))",
            "responseTextRange": [
                49,
                69
            ],
            "diagramVariables": "CC = <b><i>(( cs < ts ))</i></b>, Response = <b><i>(maintain ( c ))</i></b>.",
            "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: every point in the interval where <b><i>(( cs < ts ))</i></b> is true.\nREQUIRES: for every trigger, if trigger holds then RES also holds at the same time point.",
            "diagram": "_media/user-interface/examples/svgDiagrams/null_noTrigger_immediately_satisfaction.svg",
            "scope_mode_pt": "BAD_PT",
            "scope_mode_ft": "BAD_FT",
            "regular_condition_unexp_pt": "(cs < ts)",
            "regular_condition_unexp_ft": "(cs < ts)",
            "regular_condition_SMV_pt": "(cs < ts)",
            "regular_condition_SMV_ft": "(cs < ts)",
            "post_condition_unexp_pt": "maintain(c)",
            "post_condition_unexp_ft": "maintain(c)",
            "post_condition_SMV_pt": "maintain(c)",
            "post_condition_SMV_ft": "maintain(c)",
            "ft_fetched": "(LAST V ($regular_condition_unexp_ft$ -> $post_condition_unexp_ft$))",
            "ft": "(LAST V ((cs < ts) -> maintain(c)))",
            "pt_fetched": "(H ($regular_condition_unexp_pt$ -> $post_condition_unexp_pt$))",
            "pt": "(H ((cs < ts) -> maintain(c)))",
            "ptExpanded_fetched": "(H ($regular_condition_SMV_pt$ -> $post_condition_SMV_pt$))",
            "ptExpanded": "(H ((cs < ts) -> maintain(c)))",
            "CoCoSpecCode": "H(((cs < ts) => maintain(c)))",
            "ftExpanded_fetched": "(LAST V ($regular_condition_SMV_ft$ -> $post_condition_SMV_ft$))",
            "ftExpandedUnoptimized": "(LAST V ((cs < ts) -> maintain(c)))",
            "ftExpanded": "(LAST V ((cs < ts) -> maintain(c)))",
            "ftInfAUExpanded_fetched": "(G ($regular_condition_SMV_ft$ -> $post_condition_SMV_ft$))",
            "ftInfAUExpanded": "(G ((cs < ts) -> maintain(c)))",
            "component": "RLAgent"
        },
        "_id": "e3630b22-a678-11ef-8874-cde1a02b03fb"
    },
    {
        "reqid": "HCThreshold",
        "parent_reqid": "TEST",
        "project": "[DL] Temp Control",
        "rationale": "whenever (c S ≥ t S ) RLAgent shall immediately\nsatisfy (T ≤ T MAX ) => (T + (h MAX − c) · t S ≤ T MAX",
        "comments": "",
        "fulltext": "whenever ( cs  >=  ts ) RLAgent shall immediately satisfy ( Temp <= TMax ) => ( Temp  +  (hMax - c) * ts   <= TMax )",
        "semantics": {
            "type": "nasa",
            "scope": {
                "type": "null"
            },
            "condition": "noTrigger",
            "timing": "immediately",
            "response": "satisfaction",
            "variables": [
                "cs",
                "ts",
                "Temp",
                "TMax",
                "hMax",
                "c"
            ],
            "qualifier_word": "whenever",
            "pre_condition": "(( cs >= ts ))",
            "regular_condition": "(( cs >= ts ))",
            "conditionTextRange": [
                0,
                22
            ],
            "component_name": "RLAgent",
            "componentTextRange": [
                24,
                30
            ],
            "timingTextRange": [
                38,
                48
            ],
            "post_condition": "(( Temp <= TMax ) => ( Temp + ( hMax - c ) * ts <= TMax ))",
            "responseTextRange": [
                50,
                115
            ],
            "diagramVariables": "CC = <b><i>(( cs >= ts ))</i></b>, Response = <b><i>(( Temp <= TMax ) => ( Temp + ( hMax - c ) * ts <= TMax ))</i></b>.",
            "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: every point in the interval where <b><i>(( cs >= ts ))</i></b> is true.\nREQUIRES: for every trigger, if trigger holds then RES also holds at the same time point.",
            "diagram": "_media/user-interface/examples/svgDiagrams/null_noTrigger_immediately_satisfaction.svg",
            "scope_mode_pt": "BAD_PT",
            "scope_mode_ft": "BAD_FT",
            "regular_condition_unexp_pt": "(cs >= ts)",
            "regular_condition_unexp_ft": "(cs >= ts)",
            "regular_condition_SMV_pt": "(cs >= ts)",
            "regular_condition_SMV_ft": "(cs >= ts)",
            "post_condition_unexp_pt": "((Temp <= TMax) -> ((Temp + ((hMax - c) * ts)) <= TMax))",
            "post_condition_unexp_ft": "((Temp <= TMax) -> ((Temp + ((hMax - c) * ts)) <= TMax))",
            "post_condition_SMV_pt": "((Temp <= TMax) -> ((Temp + ((hMax - c) * ts)) <= TMax))",
            "post_condition_SMV_ft": "((Temp <= TMax) -> ((Temp + ((hMax - c) * ts)) <= TMax))",
            "ft_fetched": "(LAST V ($regular_condition_unexp_ft$ -> $post_condition_unexp_ft$))",
            "ft": "(LAST V ((cs >= ts) -> ((Temp <= TMax) -> ((Temp + ((hMax - c) * ts)) <= TMax))))",
            "pt_fetched": "(H ($regular_condition_unexp_pt$ -> $post_condition_unexp_pt$))",
            "pt": "(H ((cs >= ts) -> ((Temp <= TMax) -> ((Temp + ((hMax - c) * ts)) <= TMax))))",
            "ptExpanded_fetched": "(H ($regular_condition_SMV_pt$ -> $post_condition_SMV_pt$))",
            "ptExpanded": "(H ((cs >= ts) -> ((Temp <= TMax) -> ((Temp + ((hMax - c) * ts)) <= TMax))))",
            "CoCoSpecCode": "H(((cs >= ts) => ((Temp <= TMax) => ((Temp + ((hMax - c) * ts)) <= TMax))))",
            "ftExpanded_fetched": "(LAST V ($regular_condition_SMV_ft$ -> $post_condition_SMV_ft$))",
            "ftExpandedUnoptimized": "(LAST V ((cs >= ts) -> ((Temp <= TMax) -> ((Temp + ((hMax - c) * ts)) <= TMax))))",
            "ftExpanded": "(LAST V ((cs >= ts) -> ((Temp <= TMax) -> ((Temp + ((hMax - c) * ts)) <= TMax))))",
            "ftInfAUExpanded_fetched": "(G ($regular_condition_SMV_ft$ -> $post_condition_SMV_ft$))",
            "ftInfAUExpanded": "(G ((cs >= ts) -> ((Temp <= TMax) -> ((Temp + ((hMax - c) * ts)) <= TMax))))",
            "component": "RLAgent"
        },
        "_id": "e3630b23-a678-11ef-8874-cde1a02b03fb"
    }
]